@model DVD.Web.Models.ActorModel

@{
    ViewData["Title"] = "UpdateActor";
    if (ViewData["Error"] != null)
    {
        <script>
                alert("@ViewData["Error"]");
        </script>
    }
}

<h1>Update Actor</h1>
<hr />
<div class="row">
    <div class="col-md-4">
        @using (Html.BeginForm("UpdateActor", "Actor", FormMethod.Post, new { @role = "form", @id = "UpdateActor" }))
        {
            @Html.AntiForgeryToken()
            @Html.HiddenFor(x => x.ActorNumber)
            <div asp-validation-summary="ModelOnly" class="text-danger"></div>
            <div class="form-group">
                <label asp-for="ActorFirstName" class="control-label"></label>
                @Html.TextBoxFor(x => x.ActorFirstName, new { @class = "form-control", @placeholder = "Actor First Name" })
                <span asp-validation-for="ActorFirstName" class="text-danger"></span>
            </div>
            <div class="form-group">
                <label asp-for="ActorSurname" class="control-label"></label>
                @Html.TextBoxFor(x => x.ActorSurname, new { @class = "form-control", @placeholder = "Actor Surname" })
                <span asp-validation-for="ActorSurname" class="text-danger"></span>
            </div>
            <div class="form-group">
                <input type="submit" value="Update" class="btn btn-outline-primary" />
                <a asp-action="Index" class="btn btn-outline-danger">Back to List</a>
            </div>
        }
    </div>
</div>

@section Scripts {
    @{await Html.RenderPartialAsync("_ValidationScriptsPartial");}
}
